# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "ftp-deploy"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "https://alifelivedfully.com/"
            
      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: alifelivedfully.com
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          local-dir: public/

      - name: Upload Hugo build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Hugo-build
          path: public/
          if-no-files-found: error
          # retention-days: 90
          # compression-level: 6
          overwrite: true

# on: 
#   push:
#     branches: [ "main" ]
#   workflow_dispatch: # Run workflow manually (without waiting for the cron to be called), through the GitHub Actions Workflow page directly
  
# name: ðŸš€ FTP Deploy
# jobs:
#   web-deploy:
#     name: ðŸŽ‰ Deploy
#     runs-on: ubuntu-latest
#     steps:
#     - name: ðŸšš Get latest code
#       uses: actions/checkout@v2
    
#     - name: ðŸ“‚ Sync files
#       uses: SamKirkland/FTP-Deploy-Action@4.3.3
#       with:
#         server: alifelivedfully.com
#         username: ${{ secrets.ftp_username }}
#         password: ${{ secrets.ftp_password }}
#         local-dir: public/
